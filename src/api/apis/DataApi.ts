/* tslint:disable */
/* eslint-disable */
/**
 * amber
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RecipeBreakdown,
    RecipeBreakdownFromJSON,
    RecipeBreakdownToJSON,
} from '../models';

export interface CreateRecipesFromStepsRequest {
    recipeBreakdown: RecipeBreakdown;
}

/**
 * 
 */
export class DataApi extends runtime.BaseAPI {

    /**
     */
    async clearAssembliesRaw(): Promise<runtime.ApiResponse<boolean>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Data/clear-assemblies`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async clearAssemblies(): Promise<boolean> {
        const response = await this.clearAssembliesRaw();
        return await response.value();
    }

    /**
     */
    async createRecipesFromStepsRaw(requestParameters: CreateRecipesFromStepsRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.recipeBreakdown === null || requestParameters.recipeBreakdown === undefined) {
            throw new runtime.RequiredError('recipeBreakdown','Required parameter requestParameters.recipeBreakdown was null or undefined when calling createRecipesFromSteps.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Data/create-recipes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RecipeBreakdownToJSON(requestParameters.recipeBreakdown),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async createRecipesFromSteps(requestParameters: CreateRecipesFromStepsRequest): Promise<void> {
        await this.createRecipesFromStepsRaw(requestParameters);
    }

}
