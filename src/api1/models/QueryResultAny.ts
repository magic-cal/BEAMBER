/* tslint:disable */
/* eslint-disable */
/**
 * amber
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FieldDef,
    FieldDefFromJSON,
    FieldDefFromJSONTyped,
    FieldDefToJSON,
} from './';

/**
 * 
 * @export
 * @interface QueryResultAny
 */
export interface QueryResultAny {
    /**
     * 
     * @type {string}
     * @memberof QueryResultAny
     */
    command: string;
    /**
     * 
     * @type {number}
     * @memberof QueryResultAny
     */
    rowCount: number;
    /**
     * 
     * @type {number}
     * @memberof QueryResultAny
     */
    oid: number;
    /**
     * 
     * @type {Array<FieldDef>}
     * @memberof QueryResultAny
     */
    fields: Array<FieldDef>;
    /**
     * 
     * @type {Array<object>}
     * @memberof QueryResultAny
     */
    rows: Array<object>;
}

export function QueryResultAnyFromJSON(json: any): QueryResultAny {
    return QueryResultAnyFromJSONTyped(json, false);
}

export function QueryResultAnyFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryResultAny {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'command': json['command'],
        'rowCount': json['rowCount'],
        'oid': json['oid'],
        'fields': ((json['fields'] as Array<any>).map(FieldDefFromJSON)),
        'rows': json['rows'],
    };
}

export function QueryResultAnyToJSON(value?: QueryResultAny | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'command': value.command,
        'rowCount': value.rowCount,
        'oid': value.oid,
        'fields': ((value.fields as Array<any>).map(FieldDefToJSON)),
        'rows': value.rows,
    };
}


